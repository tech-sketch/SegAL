name: CI

on:
  push:
    branches:
      - main
      - dev
  pull_request:

jobs:
  lint:
    strategy:
      fail-fast: false
      matrix:
        poetry-version: ["1.2.0"]
        linter:
          - name: Flake8
            run: flake8
          - name: Black
            run: black --check --exclude="notebooks" .
          - name: isort
            run: isort -c -v .
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - uses: abatilo/actions-poetry@v2.1.0
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Install Dependencies
        run: poetry install
      - name: ${{ matrix.linter.name }}
        run: poetry run ${{ matrix.linter.run }}

  # Make sure commit messages follow the conventional commits convention:
  # https://www.conventionalcommits.org
  commitlint:
    name: Lint Commit Messages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: wagoid/commitlint-github-action@v2.1.0

  test:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8"]
        poetry-version: ["1.2.0"]
        os: [ubuntu-18.04]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: abatilo/actions-poetry@v2.1.0
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Install Dependencies
        run: poetry install
      - name: Test with Pytest
        run: poetry run pytest --cov=./ --cov-report=xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
